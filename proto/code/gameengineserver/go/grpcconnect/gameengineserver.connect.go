// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: gameengineserver.proto

package grpcconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	_go "github.com/sweetloveinyourheart/exploding-kittens/proto/code/gameengineserver/go"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// GameEngineServerName is the fully-qualified name of the GameEngineServer service.
	GameEngineServerName = "com.sweetloveinyourheart.kittens.gameengines.GameEngineServer"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// GameEngineServerPlayCardsProcedure is the fully-qualified name of the GameEngineServer's
	// PlayCards RPC.
	GameEngineServerPlayCardsProcedure = "/com.sweetloveinyourheart.kittens.gameengines.GameEngineServer/PlayCards"
	// GameEngineServerDefuseExplodingKittenProcedure is the fully-qualified name of the
	// GameEngineServer's DefuseExplodingKitten RPC.
	GameEngineServerDefuseExplodingKittenProcedure = "/com.sweetloveinyourheart.kittens.gameengines.GameEngineServer/DefuseExplodingKitten"
)

// GameEngineServerClient is a client for the
// com.sweetloveinyourheart.kittens.gameengines.GameEngineServer service.
type GameEngineServerClient interface {
	PlayCards(context.Context, *connect.Request[_go.PlayCardsRequest]) (*connect.Response[emptypb.Empty], error)
	DefuseExplodingKitten(context.Context, *connect.Request[_go.DefuseExplodingKittenRequest]) (*connect.Response[emptypb.Empty], error)
}

// NewGameEngineServerClient constructs a client for the
// com.sweetloveinyourheart.kittens.gameengines.GameEngineServer service. By default, it uses the
// Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewGameEngineServerClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) GameEngineServerClient {
	baseURL = strings.TrimRight(baseURL, "/")
	gameEngineServerMethods := _go.File_gameengineserver_proto.Services().ByName("GameEngineServer").Methods()
	return &gameEngineServerClient{
		playCards: connect.NewClient[_go.PlayCardsRequest, emptypb.Empty](
			httpClient,
			baseURL+GameEngineServerPlayCardsProcedure,
			connect.WithSchema(gameEngineServerMethods.ByName("PlayCards")),
			connect.WithClientOptions(opts...),
		),
		defuseExplodingKitten: connect.NewClient[_go.DefuseExplodingKittenRequest, emptypb.Empty](
			httpClient,
			baseURL+GameEngineServerDefuseExplodingKittenProcedure,
			connect.WithSchema(gameEngineServerMethods.ByName("DefuseExplodingKitten")),
			connect.WithClientOptions(opts...),
		),
	}
}

// gameEngineServerClient implements GameEngineServerClient.
type gameEngineServerClient struct {
	playCards             *connect.Client[_go.PlayCardsRequest, emptypb.Empty]
	defuseExplodingKitten *connect.Client[_go.DefuseExplodingKittenRequest, emptypb.Empty]
}

// PlayCards calls com.sweetloveinyourheart.kittens.gameengines.GameEngineServer.PlayCards.
func (c *gameEngineServerClient) PlayCards(ctx context.Context, req *connect.Request[_go.PlayCardsRequest]) (*connect.Response[emptypb.Empty], error) {
	return c.playCards.CallUnary(ctx, req)
}

// DefuseExplodingKitten calls
// com.sweetloveinyourheart.kittens.gameengines.GameEngineServer.DefuseExplodingKitten.
func (c *gameEngineServerClient) DefuseExplodingKitten(ctx context.Context, req *connect.Request[_go.DefuseExplodingKittenRequest]) (*connect.Response[emptypb.Empty], error) {
	return c.defuseExplodingKitten.CallUnary(ctx, req)
}

// GameEngineServerHandler is an implementation of the
// com.sweetloveinyourheart.kittens.gameengines.GameEngineServer service.
type GameEngineServerHandler interface {
	PlayCards(context.Context, *connect.Request[_go.PlayCardsRequest]) (*connect.Response[emptypb.Empty], error)
	DefuseExplodingKitten(context.Context, *connect.Request[_go.DefuseExplodingKittenRequest]) (*connect.Response[emptypb.Empty], error)
}

// NewGameEngineServerHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewGameEngineServerHandler(svc GameEngineServerHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	gameEngineServerMethods := _go.File_gameengineserver_proto.Services().ByName("GameEngineServer").Methods()
	gameEngineServerPlayCardsHandler := connect.NewUnaryHandler(
		GameEngineServerPlayCardsProcedure,
		svc.PlayCards,
		connect.WithSchema(gameEngineServerMethods.ByName("PlayCards")),
		connect.WithHandlerOptions(opts...),
	)
	gameEngineServerDefuseExplodingKittenHandler := connect.NewUnaryHandler(
		GameEngineServerDefuseExplodingKittenProcedure,
		svc.DefuseExplodingKitten,
		connect.WithSchema(gameEngineServerMethods.ByName("DefuseExplodingKitten")),
		connect.WithHandlerOptions(opts...),
	)
	return "/com.sweetloveinyourheart.kittens.gameengines.GameEngineServer/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case GameEngineServerPlayCardsProcedure:
			gameEngineServerPlayCardsHandler.ServeHTTP(w, r)
		case GameEngineServerDefuseExplodingKittenProcedure:
			gameEngineServerDefuseExplodingKittenHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedGameEngineServerHandler returns CodeUnimplemented from all methods.
type UnimplementedGameEngineServerHandler struct{}

func (UnimplementedGameEngineServerHandler) PlayCards(context.Context, *connect.Request[_go.PlayCardsRequest]) (*connect.Response[emptypb.Empty], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("com.sweetloveinyourheart.kittens.gameengines.GameEngineServer.PlayCards is not implemented"))
}

func (UnimplementedGameEngineServerHandler) DefuseExplodingKitten(context.Context, *connect.Request[_go.DefuseExplodingKittenRequest]) (*connect.Response[emptypb.Empty], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("com.sweetloveinyourheart.kittens.gameengines.GameEngineServer.DefuseExplodingKitten is not implemented"))
}
